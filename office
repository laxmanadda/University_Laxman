  https://git-scm.com/book/en/v1/Git-Basics-Undoing-Things
  
  https://github.com/arialdomartini/Back-End-Developer-Interview-Questions
  
  try to clean and make it look good(project)

spring rest api
hibernate,mysql and mongodb --when and why to use
git

friends referral(search in linkedin who is working in which company)
linkedin kgp alumni group
fb referral group
angellist.co and linkedin
glassdoor/naukri

you are giving very less time for each topic that you are not able to per fect it. give more time to a topic


spring
databases(mysql,hibernate,mongodb if there is time) -- procedures,functions,indexing,views,triggers,joins
oops concepts
data structures
rest/http/catching


joins--> join/inner join,outer join(left,right,full),natural join,cross join,self join,equi join,theta join
joins means joining 2 or more tables where the joining clause can be =,!=,>,<,>=,<=.
equi join is any join with join clause as "="
theta join is complement to equi join(anything other than "=")

https://stackoverflow.com/questions/17946221/sql-join-and-different-types-of-joins
self join --> http://www.mysqltutorial.org/mysql-self-join/

views --> run any query(with conditions,joins.....anything) and store them as a view. just like creating a new table.
https://stackoverflow.com/questions/1278521/why-do-you-create-a-view-in-a-database
https://www.w3schools.com/sql/sql_view.asp

indexing --> https://www.geeksforgeeks.org/indexing-in-databases-set-1/

constraints vs triggers: https://dba.stackexchange.com/questions/151881/how-do-triggers-and-check-constraints-relate-to-maitaining-database-rules

https://stackoverflow.com/questions/21077898/why-are-relational-databases-unsuitable-for-unstructured-data
https://www.tutorialspoint.com/jsp/jsp_file_uploading.htm -->file upload
https://news.ycombinator.com/item?id=12292134
important things are databases and spring and oops and DS
rest everything just understand basics

https://www.javatpoint.com/spring-java-mail-tutorial --multiple recipients
public void send_mail(String situation) {
		if(situation.equals("start_process"){
			students+mac
		}else if(situation.equals("program_offered") || situation.equals("program_scheduled")){
			students mac
		}else if(situation.equals("applied")){
			student and mac
		}else if(situation.equals("approved for interview")){
			student
		}else if(situation.equals("confirmed")){
			student
		}
		
		ApplicationContext context= new ClassPathXmlApplicationContext("applicationContext.xml");
		MailMail m= (MailMail) context.getBean("mailMail");
		
		String sender="addalaxman@gmail.com";//write here your id
		String receiver="laxmanadda26@gmail.com";//write here receiver id
		m.sendMail(sender,receiver,"hi","welcome");
		
		System.out.println("success");
	}
	
When Git stores a new version of a project, it stores a new tree 
It is built to be worked on simultaneously by many people, having multiple branches developed by individual developers, being merged, branched and re-merged constantly. 
SHA-1 value



clone fetch pull remote rebasing forking branching checkout
fork vs branch


file upload and saving
cookies(1st and 3rd party)
spa(how it is diff from ajax)
migration from mysql to postgresql
git (fetch pull branching merging )

what is api endpoint
https://github.com/arialdomartini/Back-End-Developer-Interview-Questions
https://gist.github.com/jaseemabid/1321592


https://dzone.com/articles/building-simple-restful-api
https://stackoverflow.com/questions/2122604/what-is-an-endpoint
https://spring.io/guides/gs/consuming-rest/
